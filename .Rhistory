install.packages("tidycensus")
census_api_key("5d82b1bcf818b1a7e110a07a2c48439b0197b1c7")
library(tidycensus)
census_api_key("5d82b1bcf818b1a7e110a07a2c48439b0197b1c7")
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE
)
install.packages("tidycensus")
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
census_api_key("5d82b1bcf818b1a7e110a07a2c48439b0197b1c7", install = TRUE)
v21 <- load_variables(2021, "acs5", cache = TRUE)
View(v21)
or <- get_acs(geography = "county",
year = 2021,
variables = c(total_pop = "B03002_001",
white_pop = "B03002_003", black_pop = "B03002_004",
asian_pop = "B03002_006", hisp_pop = "B03002_012"),
state = "OR",
survey = "acs5",
output = "wide")
View(or)
glimpse(or)
library(sf)
library(tigris)
or_sf <- counties(state = "OR", cb = TRUE)
or_county <- left_join(or, or_sf, by = c("GEOID" = "GEOID"))
or_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = total_popE)) +
scale_fill_viridis_c() +
labs(fill = "Total Population") +
theme_void()
View(or_county)
ortracts <- get_acs(geography = "tract",
year = 2021,
variables = c(total_pop = "B03002_001",
white_pop = "B03002_003", black_pop = "B03002_004",
asian_pop = "B03002_006", hisp_pop = "B03002_012"),
state = "OR",
survey = "acs5",
output = "wide")
View(ortracts)
mutlnomah_tracts <- get_acs(geography = "tract",
year = 2021,
variables = c(total_pop = "B03002_001",
white_pop = "B03002_003", black_pop = "B03002_004",
asian_pop = "B03002_006", hisp_pop = "B03002_012"),
state = "OR",
county = "Multnomah",
survey = "acs5",
output = "wide")
View(mutlnomah_tracts)
View(v21)
wa <- get_acs(geography = "county",
year = 2022,
variables = c(median_housing_values = "B25077_001"),
state = "WA",
survey = "acs5",
output = "wide")
View(wa)
wa_sf <- counties(state = "WA", cb = TRUE)
View(wa_sf)
wa_county <- left_join(wa, wa_sf, by = c("NAMELSAD" = "NAMELSAD"))
wa_county <- left_join(wa, wa_sf, by = c("NAMELSAD" = "NAMELSAD"))
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_value)) +
scale_fill_viridis_c() +
labs(fill = "TMedian Housing Value") +
theme_void()
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = NAMELSAD)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
View(wa_county)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesM)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
wa <- get_acs(geography = "tract",
year = 2022,
variables = c(median_housing_values = "B25077_001"),
state = "WA",
county = c("San Juan County"),
survey = "acs5",
output = "wide")
wa_sf <- counties(state = "WA", cb = TRUE)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
View(wa_sf)
wa <- get_acs(geography = "tract",
year = 2022,
variables = c(median_housing_values = "B25077_001"),
state = "WA",
county = c("San Juan County", "Skagit County", "Whatcom County"),
survey = "acs5",
output = "wide")
wa_sf <- counties(state = "WA", cb = TRUE)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
View(wa_county)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"), default_crs =
NULL)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
wa_sf <- tracts(state = "WA", cb = TRUE)
wa_county <- left_join(wa, wa_sf, by = c("GEOID" = "GEOID"))
wa_county %>%
st_as_sf() %>%
ggplot() +
geom_sf(aes(fill = median_housing_valuesE)) +
scale_fill_viridis_c() +
labs(fill = "Median Housing Value") +
theme_void()
glimpse(multnomah_tracts)
glimpse(mutlnomah_tracts)
# Do not modify this chunk.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Put all necessary libraries here
library(tidyverse)
read.csv("covid-survey.csv")
# Do not modify this chunk.
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Put all necessary libraries here
library(tidyverse)
read.csv("covid-survey.csv")
library(readr)
read.csv("covid-survey.csv")
dim("covid-survey.csv")
library(readr)
library(dplyr)
holiday_movies <- read_csv("data/holiday_movies.csv")
glimpse(holiday_movies)
library(tidyr)
library(readr)
library(ggplot2)
holiday_movies <- read_csv("data/holiday_movies.csv")
new_holiday_movies <- pivot_longer(
holiday_movies,
cols = c("christmas", "hanukkah", "kwanzaa", "holiday"),
names_to = "holidays",
values_to = "true/false"
)
filtered_holiday_movies <- new_holiday_movies[new_holiday_movies$`true/false`, ]
filtered_holiday_movies$holidays <- factor(filtered_holiday_movies$holidays, levels = c("christmas", "hanukkah", "kwanzaa", "holiday"))
library(ggplot2)
ggplot(filtered_holiday_movies, aes(x = average_rating,
color = holidays)) +
geom_density(size=1) +
labs(title = "Holiday movies by rating frequency",
x = "Average Rating",
y = "Density",
color = "Holiday in title")
ggplot(filtered_holiday_movies, aes(x = year,
y = average_rating,
color = holidays)) +
geom_point(alpha = 0.6) +
geom_smooth(method="lm",
se = FALSE,
color = "gray36") +
facet_wrap(~ holidays) +
theme(axis.text.x = element_text(angle = 65,
vjust = 0.6)) +
labs(title = "Average Movie Rating by Year and Holiday",
x = "Year",
y = "Average Rating",
color = "Holiday in title")
library(dplyr)
Christmas <- filtered_holiday_movies %>%
filter(holidays == "christmas") %>%
filter(year >= 2000 & year <= 2023)
ggplot(filtered_holiday_movies, aes(x = runtime_minutes, y = holidays, fill = holidays))+
geom_violin()+
labs(title = "Runtime in Holiday movies",
x = "Runtime (in minutes)",
y = "",
fill = "Title contains")
library(tidyr)
library(readr)
library(ggplot2)
holiday_movies <- read_csv("data/holiday_movies.csv")
new_holiday_movies <- pivot_longer(
holiday_movies,
cols = c("christmas", "hanukkah", "kwanzaa", "holiday"),
names_to = "holidays",
values_to = "true/false"
)
filtered_holiday_movies <- new_holiday_movies[new_holiday_movies$`true/false`, ]
filtered_holiday_movies$holidays <- factor(filtered_holiday_movies$holidays, levels = c("christmas", "hanukkah", "kwanzaa", "holiday"))
library(ggplot2)
ggplot(filtered_holiday_movies, aes(x = average_rating,
color = holidays)) +
geom_density(size=1) +
labs(title = "Holiday movies by rating frequency",
x = "Average Rating",
y = "Density",
color = "Holiday in title")
ggplot(filtered_holiday_movies, aes(x = year,
y = average_rating,
color = holidays)) +
geom_point(alpha = 0.6) +
geom_smooth(method="lm",
se = FALSE,
color = "gray36") +
facet_wrap(~ holidays) +
theme(axis.text.x = element_text(angle = 65,
vjust = 0.6)) +
labs(title = "Average Movie Rating by Year and Holiday",
x = "Year",
y = "Average Rating",
color = "Holiday in title")
library(dplyr)
Christmas <- filtered_holiday_movies %>%
filter(holidays == "christmas") %>%
filter(year >= 2000 & year <= 2023)
ggplot(filtered_holiday_movies, aes(x = runtime_minutes, y = holidays, fill = holidays))+
geom_violin()+
labs(title = "Runtime in Holiday movies",
x = "Runtime (in minutes)",
y = "",
fill = "Title contains")
ggplot(filtered_holiday_movies, aes(x = year,
y = runtime_minutes,
color = holidays)) +
geom_point(alpha = 0.6) +
geom_smooth(method="lm",
se = FALSE,
color = "gray36") +
facet_wrap(~ holidays) +
theme(axis.text.x = element_text(angle = 65,
vjust = 0.6)) +
labs(title = "Movie Runtime by Year and Holiday",
x = "Year",
y = "Runtime in minutes",
color = "Holiday in movie title")
library(moderndive)
holidays_lm <- lm(data = filtered_holiday_movies, runtime_minutes ~ year * holidays)
get_regression_table(holidays_lm)
library(ggplot2)
ggplot(filtered_holiday_movies, aes(x = average_rating,
color = holidays)) +
geom_density(size=1) +
labs(title = "Holiday movies by rating frequency",
x = "Average Rating",
y = "Density",
color = "Holiday in title")
ggplot(filtered_holiday_movies, aes(x = year,
y = average_rating,
color = holidays)) +
geom_point(alpha = 0.6) +
geom_smooth(method="lm",
se = FALSE,
color = "gray36") +
facet_wrap(~ holidays) +
theme(axis.text.x = element_text(angle = 65,
vjust = 0.6)) +
labs(title = "Average Movie Rating by Year and Holiday",
x = "Year",
y = "Average Rating",
color = "Holiday in title")
View(holiday_movies)
