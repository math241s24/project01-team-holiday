{
  "hash": "22b78cecbf0c27bf6661c7f1c9aaedf3",
  "result": {
    "markdown": "---\ntitle: \"Project Presentation\"\nsubtitle: \"Holiday Movies\"\nformat: \n  revealjs\nhighlight-style: a11y\nexecute:\n  code-link: true\n  echo: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#load necessary libraries\nlibrary(tidyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(moderndive)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#acquires data\nholiday_movies <- read_csv(\"data/holiday_movies.csv\")\n\n#combines holidays into one column into new data frame, new_holiday_movies\nnew_holiday_movies <- pivot_longer(\n  holiday_movies,\n  cols = c(\"christmas\", \n           \"hanukkah\", \n           \"kwanzaa\", \n           \"holiday\"),\n  names_to = \"holidays\",\n  values_to = \"true/false\"\n)\n\n#filters only the movies where the associated holiday variable is \"TRUE\" (eg. if film has \"christmas\", it will not display \"FALSE\" for hanukkah, kwanzaa, and holiday). Creates data frame filtered_holiday_movies\nfiltered_holiday_movies <- new_holiday_movies[new_holiday_movies$`true/false`, ]\n\n#converts the \"holidays\" column into categories \"christmas\", \"hanukkah\", \"kwanzaa\", \"holiday\", useful for being graphed later\nfiltered_holiday_movies$holidays <- factor(filtered_holiday_movies$holidays, levels = c(\"christmas\", \"hanukkah\", \"kwanzaa\", \"holiday\"))\n```\n:::\n\n\n\n## Outline {.smaller}\n\n* Your presentation should generally follow the same structure as your write-up. \n\n* Each team will have 5 minutes for their presentation, and each team member must speak (roughly equally) during this time. \n\n* Your presentation will be created using `Quarto`, which allows you to write slides using the same coding structure you’re used to with `Rmarkdown`. \n\n* This is a sample Quarto slide template you can edit to your desire to create your presentation. \n\n## Rubric\n\n* Roughly I recommend 1 slide for introduction, 2 slides for Question 1, ans 2 slides for Question 2. \n  + You can imagine spending roughly one minute on each slide.\n  + You should feel free to have more (or fewer) slides. \n  \n* Your evaluation will be based on your content, professionalism (including sticking to time), and your performance during the Q&A (question and answer). We don’t care how many slides you use to do this.\n\n## Introduction {.smaller}\n\n* Our dataset: Holiday Movies\n  * From TidyTuesday repository\n  * Dimensions: 2265x14\n  * Movies with \"holiday\", \"Christmas\", \"Hanukkah\", or \"Kwanzaa\" \n* We looked at trends relating to ratings, age, and run time of different holiday movies \n  * We chose this data set because we are interested in:\n    * relationship between movie types and public reception of them\n    * changes in movie style over time\n    * whether the holiday the movies were written for played a role in this\n\n::: {.cell}\n\n:::\n\n  \n\n## Question 1 Graph 1 {.smaller}\n\n* How does type of holiday affect a movie's rating, and for each holiday, how does the movie's age affect its rating?\n  * We combined holidays into one column using pivot longer\n  * Our first graph is a density plot showing the average rating density by movie type\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n  * Kwanzaa highest ratings (sample size)\n  * Hanukkah variance in ratings\n\n## Question 1 Graph 2 {.smaller}\n\n* Our second graph shows is aa scatterplot with line of best fit showing average rating by year for each holiday \n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n  * Decrease in ratings overtime\n  * Small samples for some holidays\n  * Fairly consistant\n  * OVERALL CONCLUSION\n\n\n\n\n## Question 2 Graph 1 {.smaller} \n\n* How do movie run times vary over time? Have holiday movies gotten longer over time? Shorter? Is there a significant difference of run time over time?\n  * Our first graph is a violin plot showing runtime by holiday\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n  * Kwanzaa movies short runtimes\n  * Hanukkah next\n  * Christmas have longest, concentration around 90 minutes \n  * holiday movies in general -> 90 minutes but have a wide range\n\n## Question 2 Graph 2 {.smaller}\n\n* Our second graph is a a scatterplot showing runtime by year and holiday\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n  * Runtime has increased slightly over the years\n  * Stayed fairly consistent for holiday movies overall\n  * OVERALL CONCLUSION\n\n## Question 2 Linear Model {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(moderndive)\nholidays_lm <- lm(data = filtered_holiday_movies, runtime_minutes ~ year * holidays)\nget_regression_table(holidays_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 7\n  term                    estimate std_error statistic p_value lower_ci upper_ci\n  <chr>                      <dbl>     <dbl>     <dbl>   <dbl>    <dbl>    <dbl>\n1 intercept              -1125.       83.4     -13.5     0     -1.29e+3 -9.62e+2\n2 year                       0.598     0.042    14.4     0      5.17e-1  6.8 e-1\n3 holidays: hanukkah      -314.     1399.       -0.224   0.823 -3.06e+3  2.43e+3\n4 holidays: kwanzaa     -30868.    71303.       -0.433   0.665 -1.71e+5  1.09e+5\n5 holidays: holiday       1216.      133.        9.15    0      9.56e+2  1.48e+3\n6 year:holidayshanukkah      0.144     0.696     0.207   0.836 -1.22e+0  1.51e+0\n7 year:holidayskwanzaa      15.4      35.6       0.432   0.666 -5.45e+1  8.53e+1\n8 year:holidaysholiday      -0.602     0.066    -9.06    0     -7.32e-1 -4.71e-1\n```\n:::\n:::\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}